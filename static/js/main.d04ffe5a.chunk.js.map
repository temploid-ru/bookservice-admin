{"version":3,"sources":["constants/index.js","components/auth/auth.jsx","assets/svg/index.js","components/admin/edit-tables/item/admin-edit-tables-item.jsx","components/preloader/preloader.jsx","components/admin/edit-tables/admin-edit-tables.jsx","components/admin/edit-tables/admin-edit-tables-container.jsx","components/admin/home/item/admin-home-item.jsx","components/admin/home/edit-work-day/admin-home-edit-work-day.jsx","components/admin/home/edit-work-time/admin-home-edit-work-time.jsx","components/admin/home/admin-home.jsx","components/admin/aside/aside.jsx","components/admin/admin.jsx","App.js","serviceWorker.js","reducers/auth.js","reducers/tablesList.js","reducers/index.js","store/index.js","index.js"],"names":["API_POINT","AUTH__SET_DATA","connect","dispatch","setToRedux","payload","type","props","useState","login","setLogin","password","setPassword","token","localStorage","getItem","JSON","parse","className","placeholder","value","onChange","e","target","role","onClick","body","dispatchAction","fetch","method","stringify","then","res","json","setItem","setDataInLocal","saveAuthdata","SvgEdit","xmlns","viewBox","fill","d","SvgOk","SvgMenu","SvgClose","SvgCalendar","AdminEditTablesItem","readOnly","setReadOnly","table","number","tableNumber","setTableNumber","name","setName","number_of_persons","numPersons","setNumPersons","default_deposit","depositPrice","setDepositPrice","icon","setState","parseInt","isNaN","parseFloat","id","error","console","log","Preloader","state","auth","tablesList","setTablesList","length","apiToken","items","getDataFromServer","map","item","key","idKey","AdminHomeItem","setValue","htmlFor","title","AdminHomeEditWorkDay","timeHandler","hours","hour","push","index","end","clearTimeout","setTimeout","AdminHomeEditWorkTime","editButton","start","workTime","setWorkTime","action","changeHandler","obj","newData","updateWorkTime","AdminHome","result","componentName","AdminAside","mobileOpenClass","setMobileOpenClass","button","to","href","rel","Admin","path","Boolean","window","location","hostname","match","initialState","reducer","combineReducers","store","createStore","devToolsEnhancer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d04ffe5a.chunk.js","sourcesContent":["export const API_POINT = 'https://api.domoed.su:65480/api';\n\n\nexport const AUTH__SET_DATA = 'AUTH__SET_DATA'; //Добавляем данные об авторизации\n","import React, {useState} from 'react';\nimport './auth.scss';\nimport {connect} from 'react-redux';\nimport {API_POINT, AUTH__SET_DATA} from \"../../constants\";\n\nfunction Auth(props) {\n\n    const [login, setLogin] = useState('');\n    const [password, setPassword] = useState('');\n\n    const token = localStorage.getItem('token');\n    if (token !== null) props.setToRedux(JSON.parse(token));\n\n    return (\n        <div className=\"auth\">\n            <div className=\"auth__container\">\n                <div className=\"auth__title\">Авторизация</div>\n                <div className=\"auth__body\">\n                    <div className=\"auth__form-control\">\n                        <input type=\"text\" placeholder=\"Логин\" value={login} onChange={e => setLogin(e.target.value)}/>\n                    </div>\n                    <div className=\"auth__form-control\">\n                        <input type=\"password\" placeholder=\"Пароль\" value={password}\n                               onChange={e => setPassword(e.target.value)}/>\n                    </div>\n                </div>\n                <div className=\"auth__submit\">\n                    <div className=\"btn btn--primary-color btn--block\" role=\"button\"\n                         onClick={() => authInServer({login,password}, props.setToRedux)}>Авторизоваться\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction authInServer(body,dispatchAction){\n    body['method'] = 'authorize';\n    fetch(API_POINT , {method: 'post', body: JSON.stringify(body)})\n        .then(res => res.json()).then(json => saveAuthdata(json,dispatchAction));\n}\n\nfunction saveAuthdata(json, dispatchAction) {\n    setDataInLocal(json);\n\n    dispatchAction(json);\n}\n\nfunction setDataInLocal(json){\n    localStorage.setItem('token', JSON.stringify(json));\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setToRedux: payload => dispatch({type: AUTH__SET_DATA, payload})\n    }\n};\n\nexport default connect(null, mapDispatchToProps)(Auth);\n\n","import React from 'react';\n\nexport const SvgEdit = () => <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\" className='svg-icon'>\n    <path fill=\"currentColor\"\n          d=\"M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z\"\n          className=\"\"></path>\n</svg>;\n\nexport const SvgOk = () => <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" className=\"svg-icon\">\n    <path fill=\"currentColor\"\n          d=\"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\"\n          className=\"\"></path>\n</svg>;\n\nexport const SvgMenu = () => <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\" className=\"svg-icon\">\n        <path fill=\"currentColor\"\n              d=\"M436 124H12c-6.627 0-12-5.373-12-12V80c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12z\"\n              className=\"\"></path>\n    </svg>\n;\nexport const SvgClose = () => <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\" className=\"svg-icon\">\n        <path fill=\"currentColor\"\n              d=\"M193.94 256L296.5 153.44l21.15-21.15c3.12-3.12 3.12-8.19 0-11.31l-22.63-22.63c-3.12-3.12-8.19-3.12-11.31 0L160 222.06 36.29 98.34c-3.12-3.12-8.19-3.12-11.31 0L2.34 120.97c-3.12 3.12-3.12 8.19 0 11.31L126.06 256 2.34 379.71c-3.12 3.12-3.12 8.19 0 11.31l22.63 22.63c3.12 3.12 8.19 3.12 11.31 0L160 289.94 262.56 392.5l21.15 21.15c3.12 3.12 8.19 3.12 11.31 0l22.63-22.63c3.12-3.12 3.12-8.19 0-11.31L193.94 256z\"\n              className=\"\"></path>\n    </svg>\n;\n\nexport const SvgCalendar = () => <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\" className=\"svg-icon\">\n    <path fill=\"currentColor\"\n          d=\"M148 288h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm108-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm96 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm-96 96v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm-96 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm96-260v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48zm-48 346V160H48v298c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"\n          className=\"\"></path>\n</svg>;\n","import React, {useState} from 'react';\nimport {SvgEdit, SvgOk} from \"../../../../assets/svg\";\n\nimport './admin-edit-tables-item.scss';\nimport {API_POINT} from \"../../../../constants\";\n\nfunction AdminEditTablesItem(props) {\n    const [readOnly, setReadOnly] = useState(true);\n\n    const [tableNumber, setTableNumber] = useState(props.table.number);\n    const [name, setName] = useState(props.table.name);\n    const [numPersons, setNumPersons] = useState(props.table.number_of_persons);\n    const [depositPrice, setDepositPrice] = useState(props.table.default_deposit);\n\n    const icon = readOnly ? <SvgEdit/> : <SvgOk/>;\n\n    function handlerClick() {\n\n        if (!readOnly) {\n            const table = props.table;\n            table.number = tableNumber;\n            table.name = name;\n            table.number_of_persons = numPersons;\n            table.default_deposit = depositPrice;\n\n            const body = {\n                \"method\": \"TableEdit\",\n                \"token\": props.token,\n                \"item\": table,\n                \"id\": table.id,\n            };\n\n            delete table.id;\n\n            fetch(API_POINT + '/tables', {method: 'post', body: JSON.stringify(body)})\n                .then(res => res.json()).then(json => (json.error)\n                ? console.error('update table error')\n                : console.log('update table success')\n            );\n        }\n\n        setReadOnly(!readOnly)\n    }\n\n    function updateIntValue(value, setState) {\n        value = parseInt(value);\n\n        if (isNaN(value)) value = 0;\n\n        setState(value);\n    }\n\n    function updateFloatValue(value, setState) {\n        value = parseFloat(value);\n\n        if (isNaN(value)) value = 0;\n\n        setState(value);\n    }\n\n    return (\n        <div className=\"admin-edit-tables-item aet-row\">\n            <div className=\"aet-row__table-number\">\n                <input type=\"text\" value={tableNumber} readOnly={readOnly}\n                       onChange={e => setTableNumber(e.target.value)}/>\n            </div>\n            <div className=\"aet-row__table-name\">\n                <input type=\"text\" value={name} readOnly={readOnly} onChange={e => setName(e.target.value)}/>\n            </div>\n            <div className=\"aet-row__guests-count\">\n                <input type=\"text\" value={numPersons} readOnly={readOnly}\n                       onChange={e => updateIntValue(e.target.value, setNumPersons)}/>\n            </div>\n            <div className=\"aet-row__deposit-count\">\n                <input type=\"text\" value={depositPrice} readOnly={readOnly}\n                       onChange={e => updateFloatValue(e.target.value, setDepositPrice)}/>\n            </div>\n            <div className=\"aet-row__photos\">в разработке</div>\n            <div className=\"admin-edit-tables-item__icon aet-row__edit\" onClick={handlerClick}>{icon}</div>\n        </div>\n    )\n}\n\nexport default AdminEditTablesItem;\n","import React from 'react';\n\nimport './preloader.scss';\n\nexport default function Preloader(){\n    return (\n        <div className=\"cssload-loader\">\n            <div className=\"cssload-inner cssload-one\"/>\n            <div className=\"cssload-inner cssload-two\"/>\n            <div className=\"cssload-inner cssload-three\"/>\n        </div>\n    )\n}\n","import React, {useState} from 'react';\nimport AdminEditTablesItem from './item';\nimport {connect} from 'react-redux';\n\nimport './admin-edit-tables.scss';\nimport Preloader from \"../../preloader\";\n\nimport getDataFromServer from \"./admin-edit-tables-container\";\n\nfunction AdminEditTables(props) {\n\n\n\n    const [tablesList, setTablesList] = useState([]);\n\n    if (tablesList.length === 0) {\n\n        getDataFromServer(props.token,setTablesList);\n\n        return (<Preloader/>)\n    } else {\n        return (\n            <div className=\"admin-edit-tables\">\n                <h1>Редактирование столиков</h1>\n                <div className=\"admin-edit-tables__content\">\n                    <div className=\"admin-edit-tables__header aet-row\">\n                        <div className=\"aet-row__table-number\">Номер столика</div>\n                        <div className=\"aet-row__table-name\">Название столика</div>\n                        <div className=\"aet-row__guests-count\">Кол-во гостей</div>\n                        <div className=\"aet-row__deposit-count\">Депозит столика</div>\n                        <div className=\"aet-row__photos disabled\">Фотографии</div>\n                        <div className=\"aet-row__edit\"/>\n                    </div>\n                    <div className=\"admin-edit-tables__items\">\n                        {\n                            tablesList.map((item, key) => <AdminEditTablesItem key={item.id} token={props.token} table={item} idKey={key}/>)\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state /*, ownProps*/) => {\n    return {\n        token: state.auth.token,\n    }\n};\n\nexport default connect(mapStateToProps, null)(AdminEditTables);\n","import {API_POINT} from \"../../../constants\";\n\n/**\n * Получаем данные с сервера\n *\n * @param apiToken\n * @param setState\n * @returns {boolean}\n */\nexport default function getDataFromServer(apiToken, setState) {\n\n    const body = {\n        method: 'TablesList',\n        token: apiToken\n    };\n\n    fetch(API_POINT + '/tables', {method: 'post', body: JSON.stringify(body)})\n        .then(res => res.json()).then(json => setState(json.items));\n\n\n}\n","import React, {useState} from 'react';\nimport {SvgEdit, SvgOk} from \"../../../../assets/svg\";\n\nimport './admin-home-item.scss';\n\nfunction AdminHomeItem(props) {\n\n    const [readOnly, setReadOnly] = useState(true);\n\n    const [value, setValue] = useState(props.value);\n\n    const icon = readOnly ? <SvgEdit/> : <SvgOk/>;\n\n    function handlerClick() {\n        console.log('handlerClick', readOnly);\n        setReadOnly(!readOnly)\n    }\n\n    return (\n        <div className=\"admin-edit-item\">\n            <label htmlFor=\"\">{props.title}</label>\n            <input type=\"text\" readOnly={readOnly} value={value} onChange={e => setValue(e.target.value)}/>\n            <div className=\"admin-edit-item__icon\" onClick={() => handlerClick()}>{icon}</div>\n        </div>\n    )\n}\n\nexport default AdminHomeItem;\n","import React, {useState} from 'react';\n\nfunction AdminHomeEditWorkDay(props) {\n\n    const [item, setItem] = useState(props.item);\n\n    let timeHandler;\n\n    function update(key, value) {\n\n        clearTimeout(timeHandler);\n        setItem(item);\n\n        setTimeout(() => {\n\n        }, 750);\n\n        // props.changeHandler(item);\n    }\n\n    const hours = [];\n    for (let hour = 0; hour < 23; hour++) hours.push(hour);\n\n\n    return (\n        <div className=\"admin-work-time__item\" key={item.title}>\n            <div className=\"admin-work-time__day-name\">{item.title}</div>\n            <div className=\"admin-work-time__value\">\n                <label htmlFor={\"workTimeFrom\" + props.index}>c</label>\n                <select name=\"startHour\" id={\"startHour\" + props.index}>\n                    {hours.map(hour => <option value=\"0\" key={hour}>0</option>)}\n                </select>\n                <span>:</span>\n                <select name=\"startHour\" id={\"startMinutes\" + props.index}>\n                    {hours.map(hour => <option value=\"0\" key={hour}>0</option>)}\n                </select>\n            </div>\n            <div className=\"admin-work-time__value\">\n                <label htmlFor={\"workTimeTo\" + props.index}>до</label>\n                <input type=\"text\" id={\"workTimeFrom\" + props.index} readOnly={props.readOnly} value={item.end}\n                       onChange={e => update('start', e.target.value)}/>\n            </div>\n        </div>\n    )\n}\n\nexport default AdminHomeEditWorkDay;\n","import React, {useState} from 'react';\nimport {SvgCalendar, SvgEdit, SvgOk} from \"../../../../assets/svg\";\n\nimport './admin-home-edit-work-time.scss';\nimport AdminHomeEditWorkDay from \"../edit-work-day\";\n\nfunction AdminHomeEditWorkTime() {\n\n    const [readOnly, setReadOnly] = useState(true);\n\n    const editButton = readOnly ? <SvgEdit/> : <SvgOk/>;\n\n    const [workTime,setWorkTime] = useState(\n        [\n            {title: \"Понедельник\", start: \"12:00\", end: \"21:00\"},\n            {title: \"Вторник\", start: \"12:00\", end: \"21:00\"},\n            {title: \"Среда\", start: \"12:00\", end: \"21:00\"},\n            {title: \"Четверг\", start: \"12:00\", end: \"21:00\"},\n            {title: \"Пятница\", start: \"12:00\", end: \"21:00\"},\n            {title: \"Суббота\", start: \"12:00\", end: \"21:00\"},\n            {title: \"Воскресенье\", start: \"12:00\", end: \"21:00\"},\n        ]\n    );\n\n    function updateWorkTime(index,json, action){\n        const newData = workTime;\n        newData[index] = json;\n\n        console.log('newData',newData);\n\n        action(newData);\n    }\n\n    console.log('workTime',workTime);\n\n\n    return (\n        <div className=\"admin-work-time\">\n            <div className=\"admin-work-time__header\">\n                <div className=\"admin-work-time__title\">\n                    <div>Рабочее время заведения:</div>\n                    <div className=\"admin-work-time__icon\" onClick={() => setReadOnly(!readOnly)}>\n                        {editButton}\n                    </div>\n                </div>\n\n                <div className=\"admin-work-time__custom\">\n                    <div>Редактировать работу определенного дня</div>\n                    <div className=\"admin-work-time__icon\"><SvgCalendar/></div>\n                </div>\n            </div>\n\n\n            <form action=\"\" id=\"baseWorkTime\" className=\"admin-work-time__body\">\n                {\n                    workTime.map( (item,key) => <AdminHomeEditWorkDay\n                        item={item}\n                        readOnly={readOnly}\n                        key={key}\n                        index={key}\n                        changeHandler={obj =>updateWorkTime(key,obj,setWorkTime)}\n                    />)\n                }\n            </form>\n        </div>\n    )\n}\n\nexport default AdminHomeEditWorkTime;\n","import React from 'react';\nimport AdminHomeItem from \"./item/\";\nimport './admin-home.scss';\nimport AdminHomeEditWorkTime from \"./edit-work-time\";\n\n\nfunction AdminHome() {\n\n    const items = [\n        {title: \"Название заведения\", value: \"Тестовый текст\"},\n        {title: \"Адрес заведения\", value: \"Тестовый текст\"},\n        {title: \"Номер телефона\", value: \"Тестовый текст\"},\n        {title: \"Минимальное бронирование, час\", value: \"Тестовый текст\"},\n    ];\n\n    return (\n        <div className=\"admin-home\">\n            <h1>Общие настройки</h1>\n            <div className=\"admin-home__items\">\n                {\n                    items.map((item, key) => {\n                        let result;\n                        switch (item.componentName) {\n                            // case 'rengePicker':\n                            //     const a= 'a';\n                            //     break;\n                            case \"datePicker\":\n                                break;\n                            default :\n                                result = <AdminHomeItem key={key} {...item}/>\n                        }\n                        return result\n                    })\n                }\n\n                <AdminHomeEditWorkTime/>\n\n            </div>\n        </div>\n    )\n}\n\nexport default AdminHome;\n","import React, {useState} from 'react';\nimport {Link} from \"react-router-dom\";\n\nimport './aside.scss';\nimport {SvgClose, SvgMenu} from \"../../../assets/svg\";\n\nfunction AdminAside() {\n\n    const [mobileOpenClass, setMobileOpenClass] = useState('');\n\n    const button = mobileOpenClass === '' ? <SvgMenu/> : <SvgClose/>;\n\n    return (\n        <aside className={\"aside \" + mobileOpenClass}>\n            <div className=\"aside__button\"\n                 onClick={() => setMobileOpenClass(mobileOpenClass === '' ? 'is-mobile-opened' : '')}>{button}</div>\n            <div className=\"aside__container\">\n                <div className=\"aside__title\">Панель навигации</div>\n                <ul className=\"aside__menu\">\n                    <li><Link to=\"/\">Главная</Link></li>\n                    <li><Link to=\"/edit-tables\">Редактирование столов</Link></li>\n                    <li><br/><br/><br/><br/></li>\n                    <li><a href=\"https://api.domoed.su:65480/mdDocs\" target=\"_blank\" rel=\"noopener noreferrer\">Доки от методов (чтобы под рукой были)</a></li>\n                </ul>\n            </div>\n        </aside>\n    )\n}\n\nexport default AdminAside;\n\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport AdminEditTables from \"./edit-tables\";\nimport AdminHome from \"./home\";\n\nimport './admin.scss';\nimport AdminAside from \"./aside\";\n\nfunction Admin() {\n\n    return (\n        <Router>\n            <div className=\"body\">\n\n                <AdminAside/>\n\n                <main className=\"main\">\n                    <Switch>\n                        <Route path=\"/edit-tables\"><AdminEditTables/></Route>\n                        <Route path=\"/\"><AdminHome/></Route>\n                    </Switch>\n                </main>\n            </div>\n        </Router>)\n}\n\nexport default Admin;\n","import React from 'react';\n\nimport {connect} from 'react-redux';\nimport Auth from \"./components/auth\";\nimport Admin from \"./components/admin\";\n\nimport './App.scss';\n\nfunction App(props) {\n\n    if (props.token === null)\n        return (\n            <Auth/>\n        );\n    else return (\n        <Admin/>\n    );\n}\n\nconst mapStateToProps = (state /*, ownProps*/) => {\n    return {\n        token: state.auth.token,\n    }\n};\n\n\nexport default connect(mapStateToProps, null)(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {AUTH__SET_DATA} from \"../constants\";\n\nconst initialState = {\n    token: null\n};\n\nexport default function auth(state = initialState, action) {\n    switch (action.type) {\n        case AUTH__SET_DATA:\n            return {...action.payload};\n        default:\n            return state;\n    }\n}\n","\nconst initialState = [];\n\nexport default function tablesList(state = initialState, action) {\n    switch (action.type) {\n        default:\n            return [...state];\n    }\n}\n","import { combineReducers } from 'redux';\n\nimport auth from './auth';\nimport tablesList from './tablesList';\n\nexport const reducer = combineReducers({\n    auth,\n    tablesList,\n});\n","import { reducer } from \"./../reducers/index\";\n\nimport { createStore } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension/logOnlyInProduction';\n\nconst store = createStore(reducer, devToolsEnhancer(\n));\n\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from './store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}